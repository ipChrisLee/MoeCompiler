
declare dso_local i32 @getint(...)

declare dso_local i32 @getch(...)

declare dso_local i32 @getarray(i32*)

declare dso_local float @getfloat(...)

declare dso_local float @getfarray(float*)

declare dso_local void @putint(i32)

declare dso_local void @putch(i32)

declare dso_local void @putarray(i32, i32*)

declare dso_local void @putfloat(float)

declare dso_local void @putfarray(i32, float*)

define dso_local i32 @F.main(){
L117.Entry:
	%T22.retval = alloca i32, align 4
	%V23.a = alloca i32, align 4
	%V24.b = alloca i32, align 4
	%V25.c = alloca i32, align 4
	%V26.d = alloca i32, align 4
	%V27.result = alloca i32, align 4
	store i32 5, i32* %V23.a, align 4
	store i32 5, i32* %V24.b, align 4
	store i32 1, i32* %V25.c, align 4
	%T35 = sub i32 0, 2
	store i32 %T35, i32* %V26.d, align 4
	store i32 2, i32* %V27.result, align 4
	%T43 = load i32, i32* %V26.d, align 4
	%T46 = mul i32 %T43, 1
	%T49 = sdiv i32 %T46, 2
	%T52 = icmp slt i32 %T49, 0
	br i1 %T52, label %L40.if_then, label %L42.lor.lhs.false
L42.lor.lhs.false:
	%T54 = load i32, i32* %V23.a, align 4
	%T55 = load i32, i32* %V24.b, align 4
	%T56 = sub i32 %T54, %T55
	%T59 = icmp ne i32 %T56, 0
	br i1 %T59, label %L53.land.lhs.true, label %L41.if_end
L53.land.lhs.true:
	%T60 = load i32, i32* %V25.c, align 4
	%T63 = add i32 %T60, 3
	%T66 = srem i32 %T63, 2
	%T69 = icmp ne i32 %T66, 0
	br i1 %T69, label %L40.if_then, label %L41.if_end
L40.if_then:
	%T70 = load i32, i32* %V27.result, align 4
	call arm_aapcscc void @putint(i32 %T70)
	br label %L41.if_end
L41.if_end:
	%T74 = load i32, i32* %V26.d, align 4
	%T77 = srem i32 %T74, 2
	%T80 = add i32 %T77, 67
	%T83 = icmp slt i32 %T80, 0
	br i1 %T83, label %L71.if_then, label %L73.lor.lhs.false
L73.lor.lhs.false:
	%T85 = load i32, i32* %V23.a, align 4
	%T86 = load i32, i32* %V24.b, align 4
	%T87 = sub i32 %T85, %T86
	%T90 = icmp ne i32 %T87, 0
	br i1 %T90, label %L84.land.lhs.true, label %L72.if_end
L84.land.lhs.true:
	%T91 = load i32, i32* %V25.c, align 4
	%T94 = add i32 %T91, 2
	%T97 = srem i32 %T94, 2
	%T100 = icmp ne i32 %T97, 0
	br i1 %T100, label %L71.if_then, label %L72.if_end
L71.if_then:
	store i32 4, i32* %V27.result, align 4
	%T103 = load i32, i32* %V27.result, align 4
	call arm_aapcscc void @putint(i32 %T103)
	br label %L72.if_end
L72.if_end:
	store i32 0, i32* %T22.retval, align 4
	br label %L20.return
L20.return:
	%T106 = load i32, i32* %T22.retval, align 4
	ret i32 %T106
}


